import { useState, useEffect } from "react";
import { Link, usePage, router } from "@inertiajs/react";
import axios from "axios";

// ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Type ‡∏Ç‡∏≠‡∏á Budget
type BudgetType = {
    id?: number;
    category_id: number;
    amount_limit: number;
    start_date: string;
    end_date: string;
};

// ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Type ‡∏Ç‡∏≠‡∏á Props ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å usePage()
type PageProps = {
    auth: {
        user: {
            id: number;
            name: string;
            email: string;  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° email ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
        }
    };
    budget?: BudgetType;
};


const AddBudget = () => {
    const { props } = usePage<PageProps>(); // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î type ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á
    const [category, setCategory] = useState<number | "">("");
    const [amount, setAmount] = useState<number | "">("");
    const [startDate, setStartDate] = useState("");
    const [endDate, setEndDate] = useState("");

    useEffect(() => {
        if (props.budget) {
            // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ Budget
            setCategory(props.budget.category_id);
            setAmount(props.budget.amount_limit);
            setStartDate(props.budget.start_date);
            setEndDate(props.budget.end_date);
        }
    }, [props.budget]);

    const handleSubmit = async () => {
        try {
            const budgetData = {
                user_id: props.auth.user.id, // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° user_id ‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
                category_id: Number(category),
                amount_limit: Number(amount),
                start_date: startDate,
                end_date: endDate,
            };

            if (props.budget?.id) {
                // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì
                await axios.put(`/api/budgets/${props.budget.id}`, budgetData);
                alert("‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
            } else {
                // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡πÉ‡∏´‡∏°‡πà
                await axios.post("/api/budgets", budgetData);
                alert("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
            }

            // ‚úÖ ‡πÉ‡∏ä‡πâ Inertia.js redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Dashboard
            router.visit("/dashboard");
        } catch (error) {
            console.error("‚ùå Error:", error);
        }
    };

    return (
        <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100 p-6">
            <div className="bg-white p-6 rounded-lg shadow-lg max-w-lg w-full">
                <h2 className="text-lg font-bold mb-4">
                    {props.budget ? "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì" : "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì"}
                </h2>
                <select
                    value={category}
                    onChange={(e) => setCategory(Number(e.target.value))}
                    className="border p-2 rounded w-full mb-2"
                >
                    <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</option>
                    <option value="1">‡∏≠‡∏≤‡∏´‡∏≤‡∏£</option>
                    <option value="2">‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á</option>
                    <option value="3">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢</option>
                    <option value="4">‡∏Ç‡∏≠‡∏á‡πÉ‡∏ä‡πâ</option>
                    <option value="5">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
                </select>

                <input
                    type="number"
                    placeholder="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"
                    value={amount}
                    onChange={(e) => setAmount(Number(e.target.value))}
                    className="border p-2 rounded w-full mb-2"
                />
                <input
                    type="date"
                    value={startDate}
                    onChange={(e) => setStartDate(e.target.value)}
                    className="border p-2 rounded w-full mb-2"
                />
                <input
                    type="date"
                    value={endDate}
                    onChange={(e) => setEndDate(e.target.value)}
                    className="border p-2 rounded w-full mb-4"
                />
                <button
                    onClick={handleSubmit}
                    className="px-4 py-2 bg-amber-500 text-white rounded-md w-full"
                >
                    {props.budget ? "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï" : "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å"}
                </button>

                {/* üîô ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö */}
                <Link
                    href="/dashboard"
                    className="mt-4 block text-center px-4 py-2 bg-gray-300 text-gray-700 rounded-md"
                >
                    üîô ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
                </Link>
            </div>
        </div>
    );
};

export default AddBudget;
