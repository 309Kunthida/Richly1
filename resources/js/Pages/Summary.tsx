import { PieChart, Pie, Cell, Tooltip, Legend } from "recharts";
import { useEffect, useState } from "react";
import { Link } from "@inertiajs/react";

// ‚úÖ ‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
const COLORS = ["#FF6384", "#36A2EB", "#FFCE56", "#4CAF50", "#FF9800", "#9C27B0"];

type TransactionSummary = {
    category: string;
    total: number;
    color: string;
};

const Summary = () => {
    const [data, setData] = useState<TransactionSummary[]>([]);
    const [type, setType] = useState<"expense" | "income">("expense"); // ‚úÖ ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢"

    useEffect(() => {
        fetch(`/api/summary?type=${type}`, {
            method: "GET",
            headers: {
                "Content-Type": "application/json",
                Accept: "application/json",
            },
        })
            .then((response) => response.json())
            .then((result) => {
                console.log(`üì• ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å API (${type}):`, result);

                if (!result || result.length === 0) {
                    console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î‡∏°‡∏≤!");
                    return;
                }

                // ‚úÖ ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô Array ‡∏Ç‡∏≠‡∏á‡∏Å‡∏£‡∏≤‡∏ü
                const chartData = result.map((item: any, index: number) => ({
                    category: item.category || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏",
                    total: Math.abs(item.total),
                    color: COLORS[index % COLORS.length],
                }));

                setData(chartData);
            })
            .catch((error) => console.error("‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", error));
    }, [type]); // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó

    return (
        <div className="flex flex-col items-center justify-center min-h-screen bg-amber-100 p-6">
            {/* ‚úÖ ‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡∏≤‡∏ß‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö, Dropdown ‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≤‡∏ü */}
            <div className="bg-white p-10 rounded-xl shadow-lg w-full max-w-5xl relative">
                {/* üîô ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö */}
                <Link
                    href="/dashboard"
                    className="absolute top-4 left-4 bg-amber-300 text-white px-4 py-2 rounded-lg shadow-md hover:bg-amber-500 transition duration-300"
                >
                    üîô
                </Link>

                {/* üîπ ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Å‡∏•‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô */}
                <h2 className="text-2xl font-bold text-gray-800 flex items-center justify-center mt-4">
                    {type === "expense" ? "üí∏ ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢" : "üí∞ ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö"}
                </h2>

                {/* üîΩ Dropdown ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó */}
                <div className="flex justify-center items-center mt-4">
                    <label className="text-lg font-bold text-gray-700 mr-3">‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:</label>
                    <select
                        className="border border-gray-300 p-2 rounded-lg bg-white text-gray-700 shadow-md focus:ring-2 focus:ring-amber-500 focus:outline-none appearance-none px-4 pr-8"
                        value={type}
                        onChange={(e) => setType(e.target.value as "expense" | "income")}
                    >
                        <option value="expense">‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢</option>
                        <option value="income">‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö</option>
                    </select>
                </div>

                {/* ‚úÖ ‡∏Å‡∏£‡∏≤‡∏ü‡∏ß‡∏á‡∏Å‡∏•‡∏° */}
                <div className="flex justify-center mt-6">
                    <PieChart width={400} height={400}>
                        <Pie
                            data={data}
                            cx="50%"
                            cy="50%"
                            outerRadius={120} // ‚úÖ ‡∏Ç‡∏ô‡∏≤‡∏î‡∏™‡∏°‡∏î‡∏∏‡∏•
                            fill="#8884d8"
                            dataKey="total"
                            nameKey="category"
                            label
                        >
                            {data.map((entry, index) => (
                                <Cell key={`cell-${index}`} fill={entry.color} />
                            ))}
                        </Pie>
                        <Tooltip />
                        <Legend />
                    </PieChart>
                </div>
            </div>
        </div>
    );
};

export default Summary;
