import { useState, useEffect } from "react";
import { Link } from "@inertiajs/react";
import axios from "axios";
import AddBudget from "./AddBudget"; // ‚úÖ ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ AddBudget

import { PieChart, Pie, Cell, Tooltip, Legend } from "recharts";

// ‚úÖ ‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
const COLORS = ["#FF6384", "#36A2EB", "#FFCE56", "#4CAF50", "#FF9800", "#9C27B0"];

type BudgetType = {
    id: number;
    category: string;
    amount_limit: number;
    amount_spent: number;
    start_date: string;
    end_date: string;
};

const Budget = () => {
    const [budgets, setBudgets] = useState<BudgetType[]>([]);
    const [showAddForm, setShowAddForm] = useState(false); // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°

    useEffect(() => {
        fetchBudgets(); // ‡πÇ‡∏´‡∏•‡∏î‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏ï‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    }, []);

    const fetchBudgets = async () => {
        try {
            const response = await axios.get("/api/budgets"); // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö URL ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
            setBudgets(response.data.budgets);
        } catch (error) {
            console.error("‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", error);
        }
    };


    // ‚úÖ ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Pie Chart
    const chartData = budgets.map((budget, index) => ({
        category: budget.category,
        total: budget.amount_limit,
        color: COLORS[index % COLORS.length],
    }));

    return (
        <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100 p-6">
            <div className="bg-white p-6 rounded-lg shadow-lg max-w-3xl w-full">
                <h2 className="text-xl font-bold mb-4">üìä ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</h2>

                {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì */}
                {budgets.length > 0 ? (
                    budgets.map((budget) => (
                        <div key={budget.id} className="bg-gray-100 p-4 rounded-md mb-3">
                            <h3 className="text-lg font-semibold">{budget.category}</h3>
                            <p>‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì: {budget.amount_limit} ‡∏ö‡∏≤‡∏ó</p>
                            <p>‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß: {budget.amount_spent} ‡∏ö‡∏≤‡∏ó</p>
                            <p className={budget.amount_spent > budget.amount_limit ? "text-red-500" : "text-green-500"}>
                                ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {budget.amount_limit - budget.amount_spent} ‡∏ö‡∏≤‡∏ó
                            </p>
                        </div>
                    ))
                ) : (
                    <p className="text-gray-500 text-center">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì</p>
                )}

                {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì */}
                <button
                    onClick={() => setShowAddForm(true)}
                    className="px-4 py-2 bg-amber-500 text-white rounded-md w-full mt-4"
                >
                    ‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì
                </button>

                {/* üîô ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö */}
                <Link
                    href="/dashboard"
                    className="mt-4 block text-center px-4 py-2 bg-gray-300 text-gray-700 rounded-md"
                >
                    üîô ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
                </Link>

                {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡∏ß‡∏á‡∏Å‡∏•‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì */}
                {budgets.length > 0 && (
                    <div className="flex justify-center mt-6">
                        <PieChart width={400} height={400}>
                            <Pie
                                data={chartData}
                                cx="50%"
                                cy="50%"
                                outerRadius={150}
                                fill="#8884d8"
                                dataKey="total"
                                nameKey="category"
                                label
                            >
                                {chartData.map((entry, index) => (
                                    <Cell key={`cell-${index}`} fill={entry.color} />
                                ))}
                            </Pie>
                            <Tooltip />
                            <Legend />
                        </PieChart>
                    </div>
                )}
            </div>

            {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° */}
            {showAddForm && (
                <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
                    <div className="bg-white p-6 rounded-lg shadow-lg max-w-lg">
                        <AddBudget
                            onClose={() => setShowAddForm(false)}
                            onBudgetAdded={fetchBudgets}
                        />
                    </div>
                </div>
            )}
        </div>
    );
};

export default Budget;
